{
  "hash": "462604ed6559474ba82559ef737e139d",
  "result": {
    "markdown": "---\ntitle: \"Use the tidyverse\"\ndescription: |\n  ...or else...\ndate: \"2022-11-15\"\ndraft: true\n---\n\n\n\n\nR has a LOT of idiosyncrasies which have been well-documented in various books and angry blog posts on the web.\n\nThis is another one to add to the pile.\n\nI'm really tired of dealing with bugs in base R code.\nIn many cases, the wonderful developers of the tidyverse have addressed problems in base R by writing new functions that are much more well-behaved.\nHere are some examples of problems I've run into and how to avoid them.\n\n### Subsetting columns of a data frame\n\nSubsetting a single column of a data frame with square brackets yields a vector,\nwhile subsetting multiple columns yields a data frame.\nWhat a horrible design; the type of output that a function returns should always be stable regardless of input.\nWhen you subset a single column of a tibble with square brackets, it yields a tibble with a single column.\nThe discrepancy in these behaviors can lead to very annoying bugs!\nI've started writing unit tests that use both data frames and tibbles to make sure the behavior doesn't change, and also stopped using square brackets to subset dataframes.\nInstead, you should use:\n\n- dplyr::pull() if you want a vector\n- dplyr::select() if you want a one-column data frame\n\n### Sort order depends on your locale\n\nsee https://sovacool.dev/posts/2021-08-26-r-sort-locale/\n\n### Weird factors stuff\n\nSteph's plot example?\n\n### strings as factors\n\nThankfully, `stringsAsFactors=FALSE` is the default as of R 4.0. \nIf you're still using R < 4, GO ON AND UPDATE YOUR R VERSION ALREADY!\n\nBut even before this, I seldom ran into this problem because I always used \n`readr::read_csv()` rather than the base `read.csv()` and their cousins.\nFunctions from the `readr` package don't read in strings as factors unless you explicitly tell them to with the `col_types` argument.\nIf for some reason you find yourself absolutely needing to use a version of R prior to 4.0, switch to using `readr` to avoid that bullshit behavior.\n\n\n### ifelse() vs if_else()\n\n## TLDR\n\nIf there's a base R way of doing something, check whether the tidyverse has a\ndifferent way of doing the same thing, and just go with the tidyverse way.\nChances are it'll be better for you in the long run.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}